# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["localhost:9090"]
# 프로메테우스 yml 파일
 #추가
  - job_name: "spring-actuator"
    #호출을 위한 actuator end-point
    metrics_path: '/actuator/prometheus'
    #데이터 수집을 어느정도의 시간에 따라서 진행할지 -> 스터디 환경이라 1초로 정해놨지만 실제 어플리케이션에서 이렇게 진행 시 부하가 걸릴 수 있다.
    scrape_interval: 1s
    static_configs:
      # 현재 actuator 기능은 9292 포트에서만 접속이 가능하게 변경했으니 타겟을 9292 포트로 잡는다.
      - targets: ['localhost:9292']